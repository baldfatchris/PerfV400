@model PerfV400.Models.Role

@{
    ViewBag.Title = "Role Details";
}

<div id="RoleDetails">
    
    <fieldset class="main">
        <legend>Role</legend>

        <ul class="toolbar">
            <li class="edit">@Html.ActionLink("Edit Role Details", "EditRole", new { id = Model.Role_Id }, htmlAttributes: new { @class = "editLink", data_dialog_title = "Edit Role Details" })</li>

        
        
        </ul>
        @Html.Partial("DetailsRole")
    </fieldset>




    @if (Model.vPerformanceArtist_RoleCount.Count > 0)
    {
 <fieldset>
    <legend>Artists</legend>

        @foreach (PerfV400.Models.vPerformanceArtist_RoleCount roleCount in Model.vPerformanceArtist_RoleCount.OrderByDescending(rc => rc.PerformanceCount))
        {
            string strPerformanceCount = "performances";
            if (roleCount.PerformanceCount == 1)
            {
                strPerformanceCount = "performance";
            }

            
<div class="Photo150">
    <div class="PhotoImage">
        <a href="@Url.Action("Details", "Artist", new { id = roleCount.PerformanceArtist_ArtistId}, null)">
            <img class="thumb" width="150" src="@Url.Action("GetArtistImage", "Artist", new { id = roleCount.PerformanceArtist_ArtistId })" alt="" border="0" style="border:0"/>
        </a>
    </div>
    <div class="UserStatus">
    </div>
    <div class="PhotoCaption">
        <div class="PhotoCaptionText">
            <a href="@Url.Action("Details", "Artist", new { id = roleCount.PerformanceArtist_ArtistId }, null)">
                <strong>@Html.DisplayFor(modelItem => roleCount.Artist.Artist_FirstName) @Html.DisplayFor(modelItem => roleCount.Artist.Artist_LastName)</strong>
                ( @Html.DisplayFor(modelItem => roleCount.PerformanceCount) @strPerformanceCount )

            </a>
        </div>
    </div>
</div>        
            
            
            
            
            
        }

</fieldset>
        
    }


    <fieldset class="comments">
        <legend>Comments</legend>

        @foreach (PerfV400.Models.RoleComment roleComment in Model.RoleComments)
        {
            string imgSrc = string.Format("http://graph.facebook.com/{0}/picture?width=30&height=30", roleComment.Comment.User.User_FacebookId.ToString());
            
            <div class="display-comment">
                <div class="display-user-icon">
                    <img src="@imgSrc" />
                </div>
                <div class="display-comment-text">
                    @roleComment.Comment.Comment_Text
                </div>
            </div>
        }
        
        @if (Session["UserFacebookId"] != null && Session["UserFacebookId"].ToString().Length != 0)
        {
            string myImgSrc = string.Format("http://graph.facebook.com/{0}/picture?width=30&height=30", Session["UserFacebookId"]);

            <div class="display-comment">
                <div class="display-user-icon">

                    <img src="@myImgSrc" />
                </div>
                <div class="display-comment-text">
                    @Html.TextArea("NewComment")
                </div>
            </div>
        }
        else
        {
            <div class="display-comment">
                @Html.Action("ExternalLoginsList","Account", new { ReturnUrl = ViewBag.ReturnUrl })
            </div>
           
        }

    </fieldset>

</div>

<script type="text/javascript">
    $("#filter_Event_Venue").autocomplete({
        source: "@Url.Action("Autocomplete_Event_VenueName")",
    });
</script>
